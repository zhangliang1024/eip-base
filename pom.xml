<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eip.cloud</groupId>
    <artifactId>eip-base</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>eip-common</module>
        <module>eip-config</module>
        <module>eip-business</module>
        <module>eip-monitor</module>
        <module>eip-ability</module>
    </modules>
    <packaging>pom</packaging>


    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring-boot-dependencies.version>2.3.2.RELEASE</spring-boot-dependencies.version>
        <spring-cloud-dependencies.version>Hoxton.SR9</spring-cloud-dependencies.version>
        <spring-cloud-alibaba-dependencies.version>2.2.6.RELEASE</spring-cloud-alibaba-dependencies.version>
        <apollo.config.version>1.7.0</apollo.config.version>
        <nacos.config.version>2.1.0.RELEASE</nacos.config.version>

        <druid-starter.version>1.1.21</druid-starter.version>
        <mybatis-plus.version>3.4.0</mybatis-plus.version>

        <slf4j.version>1.7.32</slf4j.version>
        <eip.base.version>0.0.1-SNAPSHOT</eip.base.version>
        <swagger.knife4j.version>3.0.3</swagger.knife4j.version>

        <json.sanitizer.version>1.1</json.sanitizer.version>

        <redission.starter.version>3.13.6</redission.starter.version>
        <redission.version>3.5.4</redission.version>
        <guava.version>27.0.1-jre</guava.version>

        <qiniu.version>[7.2.0, 7.2.99]</qiniu.version>
        <aliyun.oss.version>2.5.0</aliyun.oss.version>
        <qcloud.cos.version>4.4</qcloud.cos.version>
        <joda.time.version>2.9.5</joda.time.version>
        <commons.io.version>1.3.2</commons.io.version>
        <dingtalk-sdk.version>1.0.1</dingtalk-sdk.version>
        <hutool-core.version>5.4.7</hutool-core.version>

    </properties>

    <!-- 父工程依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--SpringCloud Alibaba依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud Netflix依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.config.version}</version>
            </dependency>

            <!-- mysql start -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>


            <!-- 日志相关 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>


            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-banner</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-core</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-apidoc</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-lock</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-idempotent</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-alert</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-sms</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-log</artifactId>
                <version>${eip.base.version}</version>
            </dependency>
            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-common-logback</artifactId>
                <version>${eip.base.version}</version>
            </dependency>


            <dependency>
                <groupId>com.eip.cloud</groupId>
                <artifactId>eip-config</artifactId>
                <version>${eip.base.version}</version>
            </dependency>

            <!--  swagger文档 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${swagger.knife4j.version}</version>
            </dependency>
            <!--json转换防止xss攻击-->
            <dependency>
                <groupId>com.mikesamuel</groupId>
                <artifactId>json-sanitizer</artifactId>
                <version>${json.sanitizer.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redission.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redission.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>${qiniu.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.oss.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api</artifactId>
                <version>${qcloud.cos.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>alibaba-dingtalk-service-sdk</artifactId>
                <version>${dingtalk-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-core.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 配置maven占位符 -->
    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <my-profile>dev</my-profile>
                <nacos-server>106.55.155.46:8848</nacos-server>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <my-profile>test</my-profile>
                <nacos-server>192.168.195.135:8848</nacos-server>
            </properties>
        </profile>
        <!-- 开启环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <my-profile>prod</my-profile>
                <nacos-server>192.168.195.135:8848</nacos-server>
            </properties>
        </profile>
    </profiles>


    <build>
        <plugins>
            <!--JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <!--
                    spring boot不用parent引入，采用dependencyManagement引入后的坑
                    原文链接：https://blog.csdn.net/NeverSad_/article/details/87270145
                -->
            </plugin>
        </plugins>


        <!-- 配置环境占位符 -->
        <resources>
            <!-- 替换勾选的环境 -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>bootstrap.yml</include>
                    <include>bootstrap-${my-profile}.yml</include>
                    <include>application.yml</include>
                    <include>application-${my-profile}.yml</include>
                </includes>
            </resource>
        </resources>


    </build>


</project>
